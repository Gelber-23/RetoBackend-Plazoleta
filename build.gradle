plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'com.course'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
ext {
	springBootVersion = "3.4.5"
	mapStruct ="1.6.3"
	openApiVersion = "2.7.0"
	mockitoVersion="5.17.0"
	set('springCloudVersion', "2024.0.1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly "org.projectlombok:lombok"
	annotationProcessor "org.projectlombok:lombok"


	runtimeOnly 'com.mysql:mysql-connector-j'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openApiVersion}"

	implementation "org.mapstruct:mapstruct:${mapStruct}"

	annotationProcessor "org.mapstruct:mapstruct-processor:${mapStruct}"

	testImplementation "org.mockito:mockito-core:${mockitoVersion}"

	testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
tasks.named('test') {
	useJUnitPlatform()
}
